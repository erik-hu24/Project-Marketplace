//- products.pug
extends layout

block content
  .left-navigation 
    h1(style="font-size:40px") MarketPlace
    a.sell-product(href="/")
      .nav-item
        i.bi-shop.icon Browse all
    a.sell-product(href="/available")
      .nav-item2
        i.bi-bag-dash Browse Available
    a.sell-product(href="/create")
      .nav-item
        i.bi-cart.icon Sell Product
    hr
    
    h1(style="font-size:30px") Categories
    .nav-item
      i.bi-award.icon Clothes
    .nav-item
      i.bi-bag.icon Bags
    .nav-item
      i.bi-house.icon Houses
    .nav-item
      i.bi-ev-front.icon Vehicles
    .nav-item
      i.bi-box.icon Free Stuffs
    .nav-item
      i.bi-tags.icon Classifieds
    .nav-item
      i.bi-phone.icon Electronics

  .main-content
    .header-container
      h1.my-h1 Today's picks
      .location-display
        i.bi-geo-alt-fill.location-icon
        span#location-text.location-text Loading location...
    
    .product-grid
      each product in productList
        a.product-link(href=`/product/${product._id}`)
          .product-card
            img.product-img(src=product.imageURL, alt='product image')
            p CA $#{product.price}
            p #{product.title || 'N/A'}
            p #{product.location || 'N/A'}
            p #{product.status}

    //- Add pagination controls
    .pagination-container
      if currentPage > 1
        a.pagination-button(href=`${isAvailableOnly ? '/available' : '/'}?page=${currentPage - 1}`) Previous
      
      .pagination-numbers
        - for(let i = 1; i <= totalPages; i++)
          if i === currentPage
            span.pagination-current #{i}
          else
            a.pagination-button(href=`${isAvailableOnly ? '/available' : '/'}?page=${i}`) #{i}
      
      if currentPage < totalPages
        a.pagination-button(href=`${isAvailableOnly ? '/available' : '/'}?page=${currentPage + 1}`) Next
      
      .pagination-goto
        input#pageInput(type="number" min="1" max=totalPages placeholder="Go to page")
        button#gotoButton Go

    //- Add JavaScript for the goto functionality
    script.
      document.getElementById('gotoButton').addEventListener('click', function() {
        const pageNum = document.getElementById('pageInput').value;
        const isAvailable = #{isAvailableOnly};
        if (pageNum && pageNum >= 1 && pageNum <= #{totalPages}) {
          window.location.href = `${isAvailable ? '/available' : '/'}?page=${pageNum}`;
        }
      });

  //- JavaScript to get the current location
  script.
    document.addEventListener("DOMContentLoaded", function() {
        const locationText = document.getElementById("location-text");

        if ("geolocation" in navigator) {
            navigator.geolocation.getCurrentPosition(async (position) => {
                const lat = position.coords.latitude;
                const lon = position.coords.longitude;

                try {
                    const response = await fetch(`https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lon}&format=json`);
                    const data = await response.json();
                    const city = data.address.city || data.address.town || data.address.village || "Unknown Location";
                    locationText.textContent = `${city}`;
                } catch (error) {
                    console.error("Error fetching location:", error);
                    locationText.textContent = "Location not found";
                }
            }, (error) => {
                console.error("Geolocation error:", error);
                locationText.textContent = "Location permission denied";
            });
        } else {
            locationText.textContent = "Geolocation not supported";
        }
    });
